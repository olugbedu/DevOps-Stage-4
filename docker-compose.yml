version: '3.8'

services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.adedejiolugbedu@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik.yml:/etc/traefik/traefik.yml:ro"

  frontend:
    build: ./frontend
    environment:
      - PORT=8080
      - AUTH_API_ADDRESS=${AUTH_API_ADDRESS}
      - TODOS_API_ADDRESS=${TODOS_API_ADDRESS}
      - USERS_API_ADDRESS=${USERS_API_ADDRESS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`code-etp.name.ng`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"

  auth-api:
    build: ./auth-api
    environment:
      - AUTH_API_PORT=8081
      - JWT_SECRET=myfancysecret
      - USERS_API_ADDRESS=${USERS_API_ADDRESS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-api.rule=Host(`code-etp.name.ng`) && PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth-api.entrypoints=websecure"
      - "traefik.http.routers.auth-api.tls.certresolver=myresolver"
      - "traefik.http.services.auth-api.loadbalancer.server.port=8081"

  todos-api:
    build: ./todos-api
    environment:
      - JWT_SECRET=myfancysecret
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos-api.rule=Host(`code-etp.name.ng`) && PathPrefix(`/api/todos`)"
      - "traefik.http.routers.todos-api.entrypoints=websecure"
      - "traefik.http.routers.todos-api.tls.certresolver=myresolver"
      - "traefik.http.services.todos-api.loadbalancer.server.port=8082"

  users-api:
    build: ./users-api
    environment:
      - SERVER_PORT=8083
      - JWT_SECRET=myfancysecret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-api.rule=Host(`code-etp.name.ng`) && PathPrefix(`/api/users`)"
      - "traefik.http.routers.users-api.entrypoints=websecure"
      - "traefik.http.routers.users-api.tls.certresolver=myresolver"
      - "traefik.http.services.users-api.loadbalancer.server.port=8083"

  log-message-processor:
    build: ./log-message-processor
    environment:
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis-queue

  redis-queue:
    image: redis:6-alpine
    ports:
      - "6379:6379"